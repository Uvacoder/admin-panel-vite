import{_ as e}from"./TwCodePreviewEditor.af8a71b1.js";import{z as t,e as o,j as n,i as l,E as r,o as s}from"./vendor.db8d48fc.js";import{_ as i}from"./TwDropdown.05ba467b.js";import"./TwIcon.8628040d.js";import"./index.esm.e4626f8f.js";const a={name:"DropdownExample",data:()=>({components:{dropdown:t(i)},codeBasicUsage:'<dropdown>\n  <button class="px-3 py-2 bg-purple-500 text-white rounded-md">Click me!</button>\n  <template #body>\n    <ul>\n      <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 1</li>\n      <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 2</li>\n      <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 3</li>\n    </ul>\n  </template>\n</dropdown>',codeTriggering:'<div class="grid grid-cols-2">\n  <div class="flex flex-col justify-center items-center border-r border-gray-200">\n    <p class="text-sm text-gray-400 mb-2">Hover to trigger</p>\n    \x3c!-- Here we use \'hover\' for the trigger --\x3e\n    <dropdown trigger="hover">\n      <button class="px-3 py-2 bg-purple-500 text-white rounded-md">Hover me!</button>\n      <template #body>\n        <ul>\n          <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 1</li>\n          <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 2</li>\n          <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 3</li>\n        </ul>\n      </template>\n    </dropdown>\n  </div>\n  <div class="flex flex-col justify-center items-center">\n    <p class="text-sm text-gray-400 mb-2">Click to trigger</p>\n    <dropdown>\n      <button class="px-3 py-2 bg-purple-500 text-white rounded-md">Click me!</button>\n      <template #body>\n        <ul>\n          <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 1</li>\n          <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 2</li>\n          <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 3</li>\n        </ul>\n      </template>\n    </dropdown>\n  </div>\n</div>',codeBodyClickHide:'<dropdown hide-on-click>\n  <button class="px-3 py-2 bg-purple-500 text-white rounded-md">Click me!</button>\n  <template #body>\n    <p class="text-sm text-purple-500 px-3">This content will be hidden if you click any area of dropdown body.</p>\n    <ul>\n      <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 1</li>\n      <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 2</li>\n      <li class="px-3 py-2 text-gray-500 hover:bg-gray-50">Item 3</li>\n    </ul>\n  </template>\n</dropdown>'})},p={class:"page-example"},c=l("h1",null,"Dropdown",-1),d=l("p",null,"Toggleable menu for displaying lists of links and actions.",-1),g=l("h2",{class:"mt-8"},"Basic usage",-1),m=l("p",null,"Click on the dropdown menu to unfold it for more actions.",-1),u=l("h2",{class:"mt-8"},"How to trigger",-1),y=l("p",null,[r("Click the triggering element or hover on it. The default is "),l("code",null,"click"),r(".")],-1),x=l("h2",{class:"mt-8"},"Menu hiding behavior",-1),b=l("p",null,[r("Use "),l("code",null,"hide-on-click"),r(" to define if menu closes on clicking.")],-1);a.render=function(t,l,r,i,a,h){const v=e;return s(),o("div",p,[c,d,g,m,n(v,{source:a.codeBasicUsage,components:a.components},null,8,["source","components"]),u,y,n(v,{source:a.codeTriggering,components:a.components},null,8,["source","components"]),x,b,n(v,{source:a.codeBodyClickHide,components:a.components},null,8,["source","components"])])};export{a as default};
